{"version":3,"sources":["PeoplePlace.js","getApi.js","PeopleTable.js","NotFoundPage.js","App.js","index.js"],"names":["PeoplePlace","state","value","setValue","columns","title","field","type","handleChangeValue","setState","this","props","location","people","personLocal","suggestions","map","suggestion","id","label","address","peopelePrepared","filter","person","data","NoSsr","inputId","TextFieldProps","InputLabelProps","htmlFor","placeholder","options","onChange","React","Component","getUser","a","fetch","response","json","getLocation","getcreate","method","body","headers","removePerson","updatePerson","PeopleTable","oldData","tableData","addNewData","newData","update","peoplePrepeared","name","to","className","editable","onRowAdd","onRowUpdate","onRowDelete","NotFoundPage","exact","App","visiblePeople","showForm","shownForm","closeForm","event","preventDefault","refreshPeople","users","Paper","MenuList","MenuItem","activeClassName","path","render","match","params","handleDelete","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ef98ecc4.chunk.js","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport MaterialTable from 'material-table';\n\nclass PeoplePlace extends React.Component {\n  state = {\n    value: [],\n    setValue: [],\n    columns: [\n      { title: 'Name', field: 'name' },\n      { title: 'Job', field: 'job_title' },\n      { title: 'Birth Year', field:'birth_date', type: 'numeric' },\n    ]\n  };\n\n  handleChangeValue = (value) => {\n    this.setState({\n      setValue: value,\n      value,\n    })\n  }\n\n  render() {\n    const { location, people, personLocal } = this.props;\n    const { setValue, columns } = this.state;\n    const suggestions = location.map(suggestion => ({\n      value: suggestion.id,\n      label: suggestion.address,\n    }));\n    const peopelePrepared = people.filter(person => person.id === +personLocal);\n\n    return (\n      <div>\n        { personLocal \n        ?   <MaterialTable\n        title=\"People\"\n        columns={columns}\n        data={peopelePrepared}\n        /> \n         : ''\n        } \n        <NoSsr>\n          <Select\n            inputId=\"react-select-value\"\n            TextFieldProps={{\n              label: 'Countries',\n              InputLabelProps: {\n                htmlFor: 'react-select-value',\n              },\n            }}\n            placeholder=\"check locale please\"\n            options={suggestions}\n            value={setValue}\n            onChange={this.handleChangeValue}\n          />\n        </NoSsr>\n      </div>\n    );\n  }\n  \n}\n\nexport default PeoplePlace;","\nexport const getUser = async() => {\n  const url = `http://167.71.4.155/user/lists`;\n    const response = await fetch(`${url}`);\n  const data = await response.json();\n  \n  return data;\n};\n\n\nexport const getLocation = async() => {\n  const url = `http://167.71.4.155/location/lists`;\n    const response = await fetch(`${url}`);\n  const data = await response.json();\n  \n  return data;\n};\n\nexport const getcreate = async(title) => {\n  const url = `http://167.71.4.155/user/create`;\n    const response = await fetch((`${url}`), {\n      method: 'post',\n      body: title,\n      headers: {\n        'content-type': 'application/json',\n      }\n    });\n  \n  return  response.json();\n};\n\nexport const removePerson = async (id) => {\n  const url = `http://167.71.4.155/user`;\n    const response = await fetch(`${url}/${id}`, {\n      method: 'DELETE',\n    });\n  return response.json();\n};\n\nexport const updatePerson = async (title, id) => {\n  const url = `http://167.71.4.155/user/update`;\n    const response = await fetch(`${url}/${id}`, {\n      method: 'POST',\n      body: title,\n      headers: {\n        'content-type': 'application/json',\n      }\n    });\n  return response.json();\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaterialTable from 'material-table';\nimport { removePerson, getcreate, updatePerson } from './getApi';\nimport { NavLink } from 'react-router-dom';\nimport './App.css';\n\n\n\nclass PeopleTable extends React.Component {\n  state = {\n    data: [],\n    columns: [\n      { title: 'Name', field: 'name' },\n      { title: 'Job', field: 'job_title' },\n      { title: 'Birth Year', field:'birth_date', type: 'numeric' },\n    ]\n  }\n\n  removePerson = (oldData) => {\n    removePerson(oldData.tableData.id + 1);\n  }\n\n  addNewData = (newData) => {\n    getcreate(newData);\n  };\n\n  update = async (newData) => {\n    updatePerson(newData, newData.id)\n  }\n      \n\n  render() {\n    const { people } = this.props;\n    const {columns} = this.state;\n    const peoplePrepeared = people.map(a => ({\n      ...a,\n      name: <NavLink to={`/location${a.id}`}>{a.name}</NavLink>, \n    }))\n    \n    return (\n      <div className=\"shown-form\">\n\n      <MaterialTable\n        title=\"People\"\n        columns={columns}\n        data={peoplePrepeared}\n          editable={{\n            onRowAdd: this.addNewData,\n            onRowUpdate: this.update,\n            onRowDelete: this.removePerson,\n          }}\n        />\n   </div>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <div>\n    <h1>Page not found</h1>\n    <span>\n      <NavLink\n        className=\"navlink\"\n        to=\"/people\"\n        exact\n      >\n        here is Home\n      </NavLink>\n    </span>\n  </div>\n);\n\nexport default NotFoundPage;","import React from 'react';\nimport './App.css';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Paper from '@material-ui/core/Paper';\nimport PeoplePlace from './PeoplePlace';\nimport PeopleTable from './PeopleTable';\nimport NotFoundPage from './NotFoundPage';\nimport { getUser, getLocation } from './getApi';\n\n  class App extends React.Component {\n    state = {\n      visiblePeople: [],\n      location: [],\n    };\n\n    componentDidMount() {\n      this.refreshPeople();\n    }\n\n    async refreshPeople() {\n      const users = await getUser();\n      const location = await getLocation();\n      this.setState({\n        visiblePeople: users.data,\n        location: location.data,\n      })\n  }\n\n    showForm = () => {\n      this.setState({\n        shownForm: true,\n      });\n    };\n\n    closeForm = (event) => {\n      event.preventDefault();\n      this.setState({\n        shownForm: false,\n      });\n    };\n\n    render() {\n      const {\n        shownForm,\n        visiblePeople,\n        location,\n      } = this.state;\n      return (\n        <div className=\"App\">\n           <Paper\n           >\n        <MenuList>\n          <MenuItem>\n          <NavLink\n              to=\"/people\"\n              className=\"Phones__page\"\n              activeClassName=\"phoneClassActive\"\n            >\n        people\n            </NavLink>\n          </MenuItem>\n          <MenuItem>\n          <NavLink\n              to=\"/location:personLocal\"\n              className=\"Phones__page page__basket\"\n              activeClassName=\"phoneClassActive\"\n            >\n                <div className=\"App__basket__title\">location</div>\n            </NavLink>\n          </MenuItem>\n        </MenuList>\n      </Paper>\n          <Switch>\n            <Route\n                path=\"/location:personLocal?\"\n                exact\n                render={({ match }) => (\n                  <PeoplePlace\n                    personLocal={match.params.personLocal}\n                    location={location}\n                    people={visiblePeople}\n                  />\n                )}\n              />\n          <Route\n            path=\"/people\"\n            render={() => (\n              <PeopleTable\n              people={visiblePeople}\n              handleDelete={this.handleDelete}\n              shownForm={shownForm}\n              location={location}\n              />\n            )}\n          />\n          <Route\n            path=\"*\"\n            component={NotFoundPage}\n          />\n        </Switch>\n        </div>\n      );\n    }\n  }\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}