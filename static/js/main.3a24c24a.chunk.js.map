{"version":3,"sources":["PeoplePlace.js","getApi.js","PeopleTable.js","NotFoundPage.js","App.js","index.js"],"names":["PeoplePlace","state","value","setValue","handleChangeValue","setState","this","props","location","people","personLocal","suggestions","map","suggestion","id","label","address","peopelePrepared","filter","person","peopleWithLocal","Card","CardContent","Typography","color","gutterBottom","name","job_title","Number","isInteger","NoSsr","inputId","TextFieldProps","InputLabelProps","htmlFor","placeholder","options","onChange","React","Component","getUser","a","fetch","response","json","data","getLocation","getcreate","title","method","body","headers","removePerson","updatePerson","PeopleTable","columns","field","type","oldData","tableData","addNewData","newData","update","peoplePrepeared","to","className","editable","onRowAdd","onRowUpdate","onRowDelete","NotFoundPage","exact","App","visiblePeople","showForm","shownForm","closeForm","event","preventDefault","refreshPeople","users","Paper","MenuList","MenuItem","activeClassName","path","render","match","params","handleDelete","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3a24c24a.chunk.js","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport NoSsr from '@material-ui/core/NoSsr';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n\nclass PeoplePlace extends React.Component {\n  state = {\n    value: [],\n    setValue: [],\n  }\n\n  handleChangeValue = (value) => {\n    this.setState({\n      setValue: value,\n      value,\n    })\n  }\n\n  render() {\n    const { location, people, personLocal } = this.props;\n    const { setValue,value } = this.state;\n    const suggestions = location.map(suggestion => ({\n      value: suggestion.id,\n      label: suggestion.address,\n    }));\n    const peopelePrepared = people.filter(person => person.id === +personLocal);\n    const peopleWithLocal = people.filter(person => person.id === +value.value);\n\n    return (\n      <div>\n        { personLocal \n        ?  peopelePrepared.map(person => (\n          <Card>\n           <CardContent>\n           <Typography color=\"textSecondary\" gutterBottom>\n          {person.name}\n        </Typography>\n           {person.job_title}\n           </CardContent>\n          </Card>\n          )\n        )\n         : ''\n        } \n        { personLocal && Number.isInteger(+value.value)\n        ?  peopleWithLocal.map(person => (\n          <Card>\n           <CardContent>\n           <Typography color=\"textSecondary\" gutterBottom>\n          {person.name}\n        </Typography>\n           {person.job_title}\n           </CardContent>\n          </Card>\n          )\n        )\n         : ''\n        } \n        <NoSsr>\n          <Select\n            inputId=\"react-select-value\"\n            TextFieldProps={{\n              label: 'Countries',\n              InputLabelProps: {\n                htmlFor: 'react-select-value',\n              },\n            }}\n            placeholder=\"check locale please\"\n            options={suggestions}\n            value={setValue}\n            onChange={this.handleChangeValue}\n          />\n        </NoSsr>\n      </div>\n    );\n  }\n  \n}\n\nexport default PeoplePlace;","\nexport const getUser = async() => {\n  const url = `http://167.71.4.155/user/lists`;\n    const response = await fetch(`${url}`);\n  const data = await response.json();\n  \n  return data;\n};\n\n\nexport const getLocation = async() => {\n  const url = `http://167.71.4.155/location/lists`;\n    const response = await fetch(`${url}`);\n  const data = await response.json();\n  \n  return data;\n};\n\nexport const getcreate = async(title) => {\n  const url = `http://167.71.4.155/user/create`;\n    const response = await fetch((`${url}`), {\n      method: 'post',\n      body: title,\n      headers: {\n        'content-type': 'application/json',\n      }\n    });\n  \n  return  response.json();\n};\n\nexport const removePerson = async (id) => {\n  const url = `http://167.71.4.155/user`;\n    const response = await fetch(`${url}/${id}`, {\n      method: 'DELETE',\n    });\n  return response.json();\n};\n\nexport const updatePerson = async (title, id) => {\n  const url = `http://167.71.4.155/user/update`;\n    const response = await fetch(`${url}/${id}`, {\n      method: 'POST',\n      body: title,\n      headers: {\n        'content-type': 'application/json',\n      }\n    });\n  return response.json();\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport MaterialTable from 'material-table';\nimport { removePerson, getcreate, updatePerson } from './getApi';\nimport { NavLink } from 'react-router-dom';\nimport './App.css';\n\n\n\nclass PeopleTable extends React.Component {\n  state = {\n    data: [],\n    columns: [\n      { title: 'Name', field: 'name' },\n      { title: 'Job', field: 'job_title' },\n      { title: 'Birth Year', field:'birth_date', type: 'numeric' },\n    ]\n  }\n\n  removePerson = (oldData) => {\n    removePerson(oldData.tableData.id + 1);\n  }\n\n  addNewData = (newData) => {\n    getcreate(newData);\n  };\n\n  update = async (newData) => {\n    updatePerson(newData, newData.id)\n  }\n      \n\n  render() {\n    const { people } = this.props;\n    const {columns} = this.state;\n    const peoplePrepeared = people.map(a => ({\n      ...a,\n      name: <NavLink to={`/location${a.id}`}>{a.name}</NavLink>, \n    }))\n    \n    return (\n      <div className=\"shown-form\">\n\n      <MaterialTable\n        title=\"People\"\n        columns={columns}\n        data={peoplePrepeared}\n          editable={{\n            onRowAdd: this.addNewData,\n            onRowUpdate: this.update,\n            onRowDelete: this.removePerson,\n          }}\n        />\n   </div>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PeopleTable;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NotFoundPage = () => (\n  <div>\n    <h1>Page not found</h1>\n    <span>\n      <NavLink\n        className=\"navlink\"\n        to=\"/people\"\n        exact\n      >\n        here is Home\n      </NavLink>\n    </span>\n  </div>\n);\n\nexport default NotFoundPage;","import React from 'react';\nimport './App.css';\nimport { Route, NavLink, Switch } from 'react-router-dom';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Paper from '@material-ui/core/Paper';\nimport PeoplePlace from './PeoplePlace';\nimport PeopleTable from './PeopleTable';\nimport NotFoundPage from './NotFoundPage';\nimport { getUser, getLocation } from './getApi';\n\n  class App extends React.Component {\n    state = {\n      visiblePeople: [],\n      location: [],\n    };\n\n    componentDidMount() {\n      this.refreshPeople();\n    }\n\n    async refreshPeople() {\n      const users = await getUser();\n      const location = await getLocation();\n      this.setState({\n        visiblePeople: users.data,\n        location: location.data,\n      })\n  }\n\n    showForm = () => {\n      this.setState({\n        shownForm: true,\n      });\n    };\n\n    closeForm = (event) => {\n      event.preventDefault();\n      this.setState({\n        shownForm: false,\n      });\n    };\n\n    render() {\n      const {\n        shownForm,\n        visiblePeople,\n        location,\n      } = this.state;\n      return (\n        <div className=\"App\">\n           <Paper\n           >\n        <MenuList>\n          <MenuItem>\n          <NavLink\n              to=\"/people\"\n              className=\"Phones__page\"\n              activeClassName=\"phoneClassActive\"\n            >\n        people\n            </NavLink>\n          </MenuItem>\n          <MenuItem>\n          <NavLink\n              to=\"/location:personLocal\"\n              className=\"Phones__page page__basket\"\n              activeClassName=\"phoneClassActive\"\n            >\n                <div className=\"App__basket__title\">location</div>\n            </NavLink>\n          </MenuItem>\n        </MenuList>\n      </Paper>\n          <Switch>\n            <Route\n                path=\"/location:personLocal?\"\n                exact\n                render={({ match }) => (\n                  <PeoplePlace\n                    personLocal={match.params.personLocal}\n                    location={location}\n                    people={visiblePeople}\n                  />\n                )}\n              />\n          <Route\n            path=\"/people\"\n            render={() => (\n              <PeopleTable\n              people={visiblePeople}\n              handleDelete={this.handleDelete}\n              shownForm={shownForm}\n              location={location}\n              />\n            )}\n          />\n          <Route\n            path=\"*\"\n            component={NotFoundPage}\n          />\n        </Switch>\n        </div>\n      );\n    }\n  }\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}